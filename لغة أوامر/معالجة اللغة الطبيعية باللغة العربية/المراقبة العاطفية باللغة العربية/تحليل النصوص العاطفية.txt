أكتب مباشرة الكود البرمجي المقترح بشكل صحيح وجملة صحيحة يمكن قرائتها وفهمها من قبل الجميع باللغة العربية الفصحى مع ذكر مثال لطريقة تطبيق هذا الأمر البرمجي 

### **خطوات لبرمجة التحليل العاطفي للنصوص باللغة العربية**

بناءً على الكتب البرمجية المتاحة حالياً، نستخدم البايثون كلغة برمجية رئيسية لهذا النوع من البرمجة. عدة خطوات يجب اتباعها لبرمجة نظام بسيط لتحليل النصوص العاطفية باللغة العربية على النحو التالي (ملاحظة: هذا البرنامج برمجي يتطلب وجود مكتبات معينة في بيئة العمل الخاصة بك، وأنت بحاجة لسحب معظم الأكواد من الويب):

```python
# استيراد المكتبات اللازمة
import nltk
from nltk.corpus import stopwords
from textblob import TextBlob

# عرف مجموعة من الكلمات الإيجابية
positive_words = ['جميل', 'رائع', 'مدهش', 'ممتاز', 'جيد']

# تعريف النص المراد تحليله
text = "هذا اليوم جيد"

# تطبيق توقف الكلمات على النص
stop_words = set(stopwords.words('arabic'))
word_tokens = word_tokenize(text)
filtered_text = [w for w in word_tokens if not w in stop_words]

# التحقق من الشعور العام للنص
feeling = 0
for word in filtered_text:
    if word in positive_words:
        feeling += 1
    else:
        feeling -= 1

# طباعة الشعور العاطفي للنص
if feeling > 0:
    print("النص ايجابي")
elif feeling < 0:
    print("النص سلبي")
else:
    print("النص محايد")
```

مثال تطبيقي للأمر البرمجي:

البرنامج يقوم بتحليل النص "هذا اليوم جيد"، حيث يقوم بإزالة كلمات الإيقاف أولاً، ثم يتحقق من الكلمات التي تبقى. إذا كانت تتطابق مع الكلمات المعروفة بأنها تحمل مشاعر إيجابية، يرفع البرنامج قيمة المتغير "شعور" بواحدة. إذا لم تتطابق الكلمات، يخفض قيمة المتغير "شعور" بواحدة. في النهاية، يقرر البرنامج ما إذا كان النص إيجابياً أو سلبياً أو محايداً استناداً إلى هذه العملية. في هذا المثال، سيتم طباعة "النص ايجابي" لأن كلمة "جيد" هي كلمة إيجابية وفقاً للبرنامج.