أكتب مباشرة الكود البرمجي المقترح بشكل صحيح وجملة صحيحة يمكن قرائتها وفهمها من قبل الجميع باللغة العربية الفصحى مع ذكر مثال لطريقة تطبيق هذا الأمر البرمجي 

الوراثة هي واحدة من الكرون الأساسية في البرمجة الكائنية. تسمح الوراثة بإنشاء نوع فرعي من نوع أساسي ما، مما يسمح لنا بإعادة استخدام الكود. الصفوف الفرعية وراثتا تحتوي على جميع الخصائص التي تمتلكها الصفوف الأساسية.

لنأخذ مثالاً بسيطاً للوراثة في إعداد لغة برمجة عربية:

فلنفترض أن لدينا نوع أساسي يسمى "سيارة" ولدينا أنواع فرعية "سيارة رياضية" و"سيارة عائلية".

كود البرمجة قد يكون كما يلي:

فصل سيارة {
  خاصية اللون: لون ;
  خاصية العلامة_التجارية: نص ;
  
  دالة قود_السيارة() {
    // البرمجة لدالة قيادة السيارة 
  }
}

فصل سيارة_رياضية يرث من سيارة {
  خاصية سرعة_قصوى: رقم;
  
  دالة قود_بسرعة_عالية() {
    // البرمجة لدالة قيادة السيارة الرياضية بسرعة عالية 
  }
}

فصل سيارة_عائلية يرث من سيارة {
  خاصية عدد_المقاعد: رقم;
  
  دالة قود_لرحلة_عائلية() {
    // البرمجة لدالة قيادة السيارة العائلية إلى رحلة عائلية  
  }
}

يمكننا الان القول أن السيارة الرياضية والسيارة العائلية لديهما كل من خاصية اللون والعلامة التجارية ودالة قيادة السيارة من الصف الأساسي "سيارة". كما أنه يمكن لكل منهما القيام بوظائف خاصة، مثل القيادة بسرعة عالية للسيارة الرياضية أو القيادة لرحلة عائلية في حالة السيارة العائلية. 

يعتبر هذا المثال بسيط ولكنه يمثل مفهوم الوراثة في البرمجة الكائنية، حيث يسمح لنا بإعادة استخدام الكود ومن ثم تبسيط التصميم وتعزيز توافق البرمجة.